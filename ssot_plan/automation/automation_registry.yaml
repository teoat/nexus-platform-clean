# NEXUS Platform - Automation Registry
# Generated: 2025-01-27T12:30:00Z
# Version: 1.0

metadata:
  generated_at: "2025-01-27T12:30:00Z"
  version: "1.0"
  platform: "NEXUS"
  type: "automation_registry"

automation:
  workflows:
    deployment:
      production:
        triggers: ["manual", "schedule", "webhook"]
        steps:
          - name: "validate_environment"
            type: "validate"
            timeout: 300
            retries: 3
            config:
              checks: ["ssot_validation", "security_scan", "dependency_check"]

          - name: "build_artifacts"
            type: "build"
            timeout: 600
            retries: 2
            config:
              parallel: true
              artifacts: ["frontend", "backend", "containers"]

          - name: "run_tests"
            type: "test"
            timeout: 900
            retries: 2
            config:
              parallel: true
              tests: ["unit", "integration", "performance", "security"]

          - name: "deploy_infrastructure"
            type: "deploy"
            timeout: 1200
            retries: 2
            config:
              environment: "production"
              services: ["database", "redis", "nginx"]

          - name: "deploy_services"
            type: "deploy"
            timeout: 1800
            retries: 2
            config:
              environment: "production"
              services: ["backend", "frontend", "frenly_ai"]

          - name: "verify_deployment"
            type: "monitor"
            timeout: 600
            retries: 3
            config:
              checks: ["health_check", "smoke_tests", "performance_tests"]

        timeout: 3600
        retry_policy: "exponential_backoff"
        max_retries: 3
        notifications:
          success: ["email", "slack"]
          failure: ["email", "slack", "pagerduty"]

      staging:
        triggers: ["pr_merge", "schedule"]
        steps:
          - name: "validate_environment"
            type: "validate"
            timeout: 180
            retries: 2
            config:
              checks: ["ssot_validation", "dependency_check"]

          - name: "build_artifacts"
            type: "build"
            timeout: 300
            retries: 2
            config:
              parallel: true
              artifacts: ["frontend", "backend"]

          - name: "run_tests"
            type: "test"
            timeout: 600
            retries: 2
            config:
              parallel: true
              tests: ["unit", "integration"]

          - name: "deploy_services"
            type: "deploy"
            timeout: 900
            retries: 2
            config:
              environment: "staging"
              services: ["backend", "frontend"]

        timeout: 1800
        retry_policy: "linear"
        max_retries: 2
        notifications:
          success: ["slack"]
          failure: ["slack", "email"]

    monitoring:
      health_check:
        triggers: ["schedule"]
        interval: "5m"
        steps:
          - name: "check_services"
            type: "monitor"
            timeout: 60
            config:
              services:
                [
                  "frontend",
                  "backend",
                  "database",
                  "redis",
                  "nginx",
                  "frenly_ai",
                ]

          - name: "check_resources"
            type: "monitor"
            timeout: 60
            config:
              metrics: ["cpu", "memory", "disk", "network"]

          - name: "alert_if_needed"
            type: "monitor"
            timeout: 30
            config:
              thresholds:
                cpu: 90
                memory: 95
                disk: 90
                response_time: 5000

        timeout: 300
        retry_policy: "none"
        notifications:
          failure: ["slack", "email"]

      optimization:
        triggers: ["schedule", "threshold_breach"]
        interval: "1h"
        steps:
          - name: "analyze_metrics"
            type: "monitor"
            timeout: 300
            config:
              metrics: ["performance", "resource_usage", "error_rates"]

          - name: "identify_issues"
            type: "monitor"
            timeout: 180
            config:
              algorithms: ["anomaly_detection", "trend_analysis"]

          - name: "apply_optimizations"
            type: "monitor"
            timeout: 600
            config:
              actions: ["scale_services", "optimize_queries", "clear_caches"]

        timeout: 1200
        retry_policy: "linear"
        max_retries: 2
        notifications:
          success: ["slack"]
          failure: ["slack", "email"]

    backup:
      daily:
        triggers: ["schedule"]
        schedule: "0 2 * * *"
        steps:
          - name: "create_snapshot"
            type: "backup"
            timeout: 1800
            config:
              databases: ["postgresql", "redis"]
              files: ["config", "logs", "uploads"]

          - name: "compress_backup"
            type: "backup"
            timeout: 600
            config:
              compression: "gzip"
              level: 9

          - name: "upload_backup"
            type: "backup"
            timeout: 1200
            config:
              destination: "s3://nexus-backups"
              encryption: true

          - name: "verify_backup"
            type: "backup"
            timeout: 300
            config:
              checks: ["integrity", "completeness", "accessibility"]

        timeout: 3600
        retry_policy: "exponential_backoff"
        max_retries: 3
        retention: "30d"
        notifications:
          success: ["slack"]
          failure: ["slack", "email", "pagerduty"]

      on_demand:
        triggers: ["manual", "api_call"]
        steps:
          - name: "create_snapshot"
            type: "backup"
            timeout: 1800
            config:
              databases: ["postgresql", "redis"]
              files: ["config", "logs", "uploads"]

          - name: "compress_backup"
            type: "backup"
            timeout: 600
            config:
              compression: "gzip"
              level: 9

          - name: "upload_backup"
            type: "backup"
            timeout: 1200
            config:
              destination: "s3://nexus-backups"
              encryption: true

          - name: "notify_completion"
            type: "backup"
            timeout: 30
            config:
              channels: ["slack", "email"]

        timeout: 3600
        retry_policy: "linear"
        max_retries: 2
        notifications:
          success: ["slack", "email"]
          failure: ["slack", "email"]

    security:
      daily_scan:
        triggers: ["schedule"]
        schedule: "0 3 * * *"
        steps:
          - name: "vulnerability_scan"
            type: "security"
            timeout: 1800
            config:
              tools: ["bandit", "safety", "semgrep"]
              scope: ["code", "dependencies", "containers"]

          - name: "security_audit"
            type: "security"
            timeout: 900
            config:
              checks: ["permissions", "secrets", "network"]

          - name: "compliance_check"
            type: "security"
            timeout: 600
            config:
              standards: ["gdpr", "sox", "pci"]

        timeout: 3600
        retry_policy: "linear"
        max_retries: 2
        notifications:
          success: ["slack"]
          failure: ["slack", "email", "pagerduty"]

      on_demand_scan:
        triggers: ["manual", "api_call"]
        steps:
          - name: "vulnerability_scan"
            type: "security"
            timeout: 1800
            config:
              tools: ["bandit", "safety", "semgrep"]
              scope: ["code", "dependencies", "containers"]

          - name: "generate_report"
            type: "security"
            timeout: 300
            config:
              format: "json"
              include_recommendations: true

        timeout: 3600
        retry_policy: "linear"
        max_retries: 2
        notifications:
          success: ["slack", "email"]
          failure: ["slack", "email"]

  policies:
    execution:
      max_concurrent: 5
      max_retries: 3
      timeout_default: 300
      resource_limits:
        cpu: "2"
        memory: "4Gi"
        disk: "10Gi"

      retry_policies:
        exponential_backoff:
          base_delay: 1
          max_delay: 60
          multiplier: 2
        linear:
          delay: 5
          max_delay: 60
        none:
          delay: 0

    security:
      require_authentication: true
      audit_all_actions: true
      encrypt_sensitive_data: true
      restrict_network_access: true
      require_approval_for:
        - "production_deploy"
        - "security_config_change"
        - "backup_restore"

      encryption:
        algorithm: "AES-256"
        key_rotation: "90d"
        backup_encryption: true

    monitoring:
      log_level: "INFO"
      metrics_collection: true
      alert_on_failure: true
      performance_tracking: true
      retention:
        logs: "30d"
        metrics: "90d"
        traces: "7d"

      alerting:
        channels: ["email", "slack", "pagerduty"]
        escalation:
          - delay: "5m"
            channels: ["slack"]
          - delay: "15m"
            channels: ["email", "pagerduty"]
          - delay: "30m"
            channels: ["phone"]

    notifications:
      default_channels: ["slack"]
      critical_channels: ["email", "slack", "pagerduty"]
      success_channels: ["slack"]

      templates:
        success: "✅ {workflow_name} completed successfully in {duration}"
        failure: "❌ {workflow_name} failed: {error_message}"
        warning: "⚠️ {workflow_name} completed with warnings: {warnings}"

      rate_limiting:
        max_notifications_per_hour: 100
        cooldown_period: "5m"

  environments:
    local:
      execution_runner: "local"
      resource_limits:
        cpu: "1"
        memory: "2Gi"
        disk: "5Gi"
      network_access: "unrestricted"
      security_level: "development"

    staging:
      execution_runner: "docker"
      resource_limits:
        cpu: "2"
        memory: "4Gi"
        disk: "10Gi"
      network_access: "restricted"
      security_level: "staging"

    production:
      execution_runner: "kubernetes"
      resource_limits:
        cpu: "4"
        memory: "8Gi"
        disk: "20Gi"
      network_access: "highly_restricted"
      security_level: "production"
      require_approval: true

  integrations:
    ci_cd:
      github_actions:
        enabled: true
        workflows: ["ci", "cd", "security"]
        secrets: ["NEXUS_SSOT_TOKEN", "DEPLOYMENT_KEY"]

      gitlab_ci:
        enabled: false
        workflows: ["ci", "cd"]
        secrets: ["NEXUS_SSOT_TOKEN"]

    monitoring:
      prometheus:
        enabled: true
        endpoint: "http://prometheus:9090"
        metrics_path: "/metrics"

      grafana:
        enabled: true
        endpoint: "http://grafana:3000"
        dashboards: ["automation", "system", "security"]

      elasticsearch:
        enabled: true
        endpoint: "http://elasticsearch:9200"
        index: "nexus-automation"

    notifications:
      slack:
        enabled: true
        webhook_url: "${SLACK_WEBHOOK_URL}"
        channels: ["#automation", "#alerts"]

      email:
        enabled: true
        smtp_server: "${SMTP_SERVER}"
        from_address: "automation@nexus.com"
        to_addresses: ["team@nexus.com"]

      pagerduty:
        enabled: true
        integration_key: "${PAGERDUTY_KEY}"
        escalation_policy: "nexus-automation"
