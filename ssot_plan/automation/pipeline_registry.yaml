# NEXUS Platform - Pipeline Registry
# Generated: 2025-01-27T12:30:00Z
# Version: 1.0

metadata:
  generated_at: "2025-01-27T12:30:00Z"
  version: "1.0"
  platform: "NEXUS"
  type: "pipeline_registry"

pipelines:
  ci:
    triggers: ["push", "pr"]
    conditions:
      branches: ["main", "develop", "feature/*"]
      paths: ["**/*.py", "**/*.ts", "**/*.tsx", "**/*.yaml", "**/*.yml"]

    stages:
      - name: "validate"
        parallel: true
        steps:
          - name: "ssot_validation"
            type: "validate"
            timeout: 300
            config:
              anchors:
                [
                  "database_schema",
                  "api_contract",
                  "deployment",
                  "environment",
                  "security",
                ]
              checks: ["syntax", "schema", "consistency"]

          - name: "linting"
            type: "validate"
            timeout: 180
            config:
              tools: ["pylint", "eslint", "yamllint"]
              parallel: true

          - name: "security_scan"
            type: "validate"
            timeout: 600
            config:
              tools: ["bandit", "safety", "semgrep"]
              parallel: true

      - name: "test"
        parallel: true
        steps:
          - name: "unit_tests"
            type: "test"
            timeout: 900
            config:
              frameworks: ["pytest", "jest"]
              coverage_threshold: 80
              parallel: true

          - name: "integration_tests"
            type: "test"
            timeout: 1200
            config:
              services: ["database", "redis", "backend", "frontend"]
              parallel: true

          - name: "performance_tests"
            type: "test"
            timeout: 1800
            config:
              tools: ["locust", "k6"]
              scenarios: ["load", "stress", "spike"]

      - name: "build"
        parallel: true
        steps:
          - name: "build_frontend"
            type: "build"
            timeout: 600
            config:
              framework: "react"
              build_tool: "webpack"
              optimization: true

          - name: "build_backend"
            type: "build"
            timeout: 300
            config:
              language: "python"
              build_tool: "pip"
              requirements: "requirements.txt"

          - name: "build_containers"
            type: "build"
            timeout: 900
            config:
              services: ["frontend", "backend", "frenly_ai", "nginx"]
              registry: "nexus-registry"
              tag_strategy: "git_commit"

  cd:
    production:
      triggers: ["manual", "tag"]
      conditions:
        branches: ["main"]
        tags: ["v*"]

      stages:
        - name: "pre_deploy"
          steps:
            - name: "backup"
              type: "backup"
              timeout: 1800
              config:
                databases: ["postgresql", "redis"]
                files: ["config", "uploads"]
                destination: "s3://nexus-backups"

            - name: "validate_environment"
              type: "validate"
              timeout: 300
              config:
                checks:
                  [
                    "resource_availability",
                    "dependency_versions",
                    "security_policies",
                  ]

            - name: "check_dependencies"
              type: "validate"
              timeout: 180
              config:
                services: ["database", "redis", "nginx"]
                health_checks: true

        - name: "deploy"
          parallel: true
          steps:
            - name: "deploy_infrastructure"
              type: "deploy"
              timeout: 1200
              config:
                environment: "production"
                services: ["database", "redis", "nginx"]
                strategy: "rolling_update"

            - name: "deploy_services"
              type: "deploy"
              timeout: 1800
              config:
                environment: "production"
                services: ["backend", "frontend", "frenly_ai"]
                strategy: "blue_green"

            - name: "update_configs"
              type: "deploy"
              timeout: 300
              config:
                ssot_anchors: ["environment", "security", "monitoring"]
                validation: true

        - name: "post_deploy"
          steps:
            - name: "health_check"
              type: "monitor"
              timeout: 600
              config:
                services:
                  [
                    "frontend",
                    "backend",
                    "database",
                    "redis",
                    "nginx",
                    "frenly_ai",
                  ]
                checks: ["endpoint_health", "response_time", "error_rate"]

            - name: "smoke_tests"
              type: "test"
              timeout: 300
              config:
                scenarios: ["login", "api_calls", "database_queries"]
                parallel: true

            - name: "monitoring_setup"
              type: "monitor"
              timeout: 180
              config:
                dashboards: ["production", "automation", "security"]
                alerts: ["performance", "errors", "security"]

      notifications:
        success: ["email", "slack"]
        failure: ["email", "slack", "pagerduty"]
        approval_required: true

    staging:
      triggers: ["pr_merge"]
      conditions:
        branches: ["develop"]

      stages:
        - name: "deploy"
          parallel: true
          steps:
            - name: "deploy_services"
              type: "deploy"
              timeout: 900
              config:
                environment: "staging"
                services: ["backend", "frontend"]
                strategy: "rolling_update"

            - name: "run_tests"
              type: "test"
              timeout: 600
              config:
                tests: ["integration", "e2e"]
                parallel: true

            - name: "generate_report"
              type: "monitor"
              timeout: 120
              config:
                metrics: ["performance", "coverage", "security"]
                format: "html"

      notifications:
        success: ["slack"]
        failure: ["slack", "email"]

    development:
      triggers: ["push"]
      conditions:
        branches: ["feature/*", "bugfix/*"]

      stages:
        - name: "deploy"
          steps:
            - name: "deploy_services"
              type: "deploy"
              timeout: 600
              config:
                environment: "development"
                services: ["backend", "frontend"]
                strategy: "recreate"

            - name: "run_tests"
              type: "test"
              timeout: 300
              config:
                tests: ["unit", "integration"]
                parallel: true

      notifications:
        success: ["slack"]
        failure: ["slack"]

  monitoring:
    triggers: ["schedule", "event"]
    conditions:
      schedule: "*/5 * * * *" # Every 5 minutes
      events: ["deployment", "configuration_change", "alert"]

    stages:
      - name: "collect"
        parallel: true
        steps:
          - name: "gather_metrics"
            type: "monitor"
            timeout: 120
            config:
              sources: ["prometheus", "grafana", "elasticsearch"]
              metrics: ["system", "application", "business"]

          - name: "check_logs"
            type: "monitor"
            timeout: 180
            config:
              sources: ["application", "system", "security"]
              patterns: ["error", "warning", "critical"]

          - name: "analyze_performance"
            type: "monitor"
            timeout: 300
            config:
              metrics: ["response_time", "throughput", "error_rate"]
              thresholds: ["warning", "critical"]

      - name: "analyze"
        steps:
          - name: "detect_anomalies"
            type: "monitor"
            timeout: 240
            config:
              algorithms: ["statistical", "machine_learning"]
              sensitivity: "medium"

          - name: "predict_issues"
            type: "monitor"
            timeout: 180
            config:
              models: ["trend_analysis", "capacity_planning"]
              horizon: "1h"

          - name: "generate_insights"
            type: "monitor"
            timeout: 120
            config:
              format: "json"
              include_recommendations: true

      - name: "respond"
        steps:
          - name: "send_alerts"
            type: "monitor"
            timeout: 60
            config:
              channels: ["email", "slack", "pagerduty"]
              severity_mapping: true

          - name: "auto_heal"
            type: "monitor"
            timeout: 300
            config:
              actions: ["restart_service", "scale_up", "clear_cache"]
              conditions: ["service_down", "high_cpu", "memory_leak"]

          - name: "update_dashboards"
            type: "monitor"
            timeout: 60
            config:
              dashboards: ["system", "automation", "security"]
              refresh: true

  security:
    triggers: ["schedule", "event", "manual"]
    conditions:
      schedule: "0 3 * * *" # Daily at 3 AM
      events: ["deployment", "configuration_change"]

    stages:
      - name: "scan"
        parallel: true
        steps:
          - name: "vulnerability_scan"
            type: "security"
            timeout: 1800
            config:
              tools: ["bandit", "safety", "semgrep", "trivy"]
              scope: ["code", "dependencies", "containers", "infrastructure"]

          - name: "dependency_audit"
            type: "security"
            timeout: 600
            config:
              tools: ["npm_audit", "pip_audit", "yarn_audit"]
              check_vulnerabilities: true

          - name: "container_scan"
            type: "security"
            timeout: 900
            config:
              tools: ["trivy", "clair", "anchore"]
              registries: ["nexus-registry"]

      - name: "analyze"
        steps:
          - name: "risk_assessment"
            type: "security"
            timeout: 300
            config:
              criteria: ["cvss_score", "exploitability", "impact"]
              threshold: "medium"

          - name: "compliance_check"
            type: "security"
            timeout: 600
            config:
              standards: ["gdpr", "sox", "pci", "iso27001"]
              generate_report: true

      - name: "respond"
        steps:
          - name: "generate_report"
            type: "security"
            timeout: 180
            config:
              format: "html"
              include_recommendations: true
              severity_breakdown: true

          - name: "notify_team"
            type: "security"
            timeout: 60
            config:
              channels: ["email", "slack"]
              severity_filter: "medium"

          - name: "create_tickets"
            type: "security"
            timeout: 120
            config:
              system: "jira"
              project: "SEC"
              severity_mapping: true

  backup:
    triggers: ["schedule", "manual", "event"]
    conditions:
      schedule: "0 2 * * *" # Daily at 2 AM
      events: ["before_deployment", "configuration_change"]

    stages:
      - name: "prepare"
        steps:
          - name: "check_space"
            type: "backup"
            timeout: 60
            config:
              required_space: "10GB"
              check_disk_space: true

          - name: "stop_services"
            type: "backup"
            timeout: 300
            config:
              services: ["frontend", "backend"]
              graceful_shutdown: true

      - name: "backup"
        parallel: true
        steps:
          - name: "backup_database"
            type: "backup"
            timeout: 1800
            config:
              database: "postgresql"
              format: "custom"
              compression: true

          - name: "backup_redis"
            type: "backup"
            timeout: 600
            config:
              database: "redis"
              format: "rdb"
              compression: true

          - name: "backup_files"
            type: "backup"
            timeout: 1200
            config:
              paths: ["/config", "/logs", "/uploads"]
              compression: "gzip"

      - name: "verify"
        steps:
          - name: "verify_integrity"
            type: "backup"
            timeout: 300
            config:
              checksums: true
              test_restore: false

          - name: "upload_backup"
            type: "backup"
            timeout: 1200
            config:
              destination: "s3://nexus-backups"
              encryption: true
              retention: "30d"

      - name: "cleanup"
        steps:
          - name: "start_services"
            type: "backup"
            timeout: 300
            config:
              services: ["frontend", "backend"]
              health_check: true

          - name: "cleanup_local"
            type: "backup"
            timeout: 60
            config:
              keep_local: false
              cleanup_old: true

pipeline_config:
  global:
    timeout: 3600
    retries: 3
    parallel_execution: true
    resource_limits:
      cpu: "2"
      memory: "4Gi"
      disk: "10Gi"

  environments:
    local:
      execution_runner: "local"
      resource_limits:
        cpu: "1"
        memory: "2Gi"
        disk: "5Gi"

    staging:
      execution_runner: "docker"
      resource_limits:
        cpu: "2"
        memory: "4Gi"
        disk: "10Gi"

    production:
      execution_runner: "kubernetes"
      resource_limits:
        cpu: "4"
        memory: "8Gi"
        disk: "20Gi"
      require_approval: true

  notifications:
    default_channels: ["slack"]
    critical_channels: ["email", "slack", "pagerduty"]
    success_channels: ["slack"]

    templates:
      success: "✅ Pipeline {pipeline_name} completed successfully in {duration}"
      failure: "❌ Pipeline {pipeline_name} failed at stage {stage}: {error}"
      warning: "⚠️ Pipeline {pipeline_name} completed with warnings: {warnings}"

  integrations:
    github:
      enabled: true
      webhook_secret: "${GITHUB_WEBHOOK_SECRET}"
      status_checks: true
      pr_comments: true

    gitlab:
      enabled: false
      webhook_secret: "${GITLAB_WEBHOOK_SECRET}"
      status_checks: true

    jira:
      enabled: true
      url: "${JIRA_URL}"
      username: "${JIRA_USERNAME}"
      api_token: "${JIRA_API_TOKEN}"
      project: "NEXUS"

    confluence:
      enabled: true
      url: "${CONFLUENCE_URL}"
      username: "${CONFLUENCE_USERNAME}"
      api_token: "${CONFLUENCE_API_TOKEN}"
      space: "NEXUS"
