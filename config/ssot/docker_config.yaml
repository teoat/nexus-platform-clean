# NEXUS Platform - Docker Configuration SSOT Anchor
# Generated: 2025-01-27T12:30:00Z
# Version: 1.0

metadata:
  anchor_id: "docker_config"
  family: "deployment"
  description: "Docker container and orchestration configuration"
  format: "yaml"
  owner: "@nexus-devops-team"
  version: "v1.0.0"
  centrality_score: 0.85

services:
  postgres:
    image: "postgres:15-alpine"
    container_name: "nexus-postgres"
    environment:
      POSTGRES_DB: "nexus"
      POSTGRES_USER: "nexus"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-nexus123}"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
      - "./backend/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus"]
      interval: "30s"
      timeout: "10s"
      retries: 3

  redis:
    image: "redis:7-alpine"
    container_name: "nexus-redis"
    command: "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}"
    volumes:
      - "redis_data:/data"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: "30s"
      timeout: "10s"
      retries: 3

  backend:
    build:
      context: "."
      dockerfile: "backend/Dockerfile"
    container_name: "nexus-backend"
    environment:
      DATABASE_URL: "postgresql://nexus:${POSTGRES_PASSWORD:-nexus123}@postgres:5432/nexus"
      REDIS_URL: "redis://:${REDIS_PASSWORD:-redis123}@redis:6379"
      API_BASE_URL: "http://localhost:8000"
      ENVIRONMENT: "development"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: "service_healthy"
      redis:
        condition: "service_healthy"
    volumes:
      - "./backend:/app"
      - "./config:/app/config"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: "30s"
      timeout: "10s"
      retries: 3

volumes:
  postgres_data: {}
  redis_data: {}

networks:
  default:
    name: "nexus-network"
