apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: nexus
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'nexus-platform'
        environment: 'production'

    # Alertmanager configuration
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
    rule_files:
      - "rules/*.yml"

    # Scrape configuration
    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        scrape_interval: 5s
        metrics_path: /metrics

      # NEXUS Backend API
      - job_name: 'nexus-backend'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - nexus
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: nexus-backend
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: metrics
        scrape_interval: 10s
        metrics_path: /metrics
        scrape_timeout: 5s
        honor_labels: true

      # NEXUS Frontend
      - job_name: 'nexus-frontend'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - nexus
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: nexus-frontend
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        scrape_interval: 15s
        metrics_path: /metrics
        scrape_timeout: 5s

      # PostgreSQL Database
      - job_name: 'postgres'
        static_configs:
          - targets: ['postgres-exporter:9187']
        scrape_interval: 15s
        metrics_path: /metrics
        scrape_timeout: 5s

      # Redis
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter:9121']
        scrape_interval: 15s
        metrics_path: /metrics
        scrape_timeout: 5s

      # Node Exporter
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: node-exporter
        scrape_interval: 15s
        metrics_path: /metrics
        scrape_timeout: 5s

      # cAdvisor
      - job_name: 'cadvisor'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: cadvisor
        scrape_interval: 15s
        metrics_path: /metrics
        scrape_timeout: 5s

      # Kubernetes API Server
      - job_name: 'kubernetes-apiserver'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
        - source_labels: [__address__]
          action: replace
          target_label: __address__
          regex: (.+)
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
          replacement: /api/v1/namespaces/${1}/services/${2}:${3}/proxy/metrics
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        scrape_interval: 15s
        scrape_timeout: 5s

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        scrape_interval: 15s
        scrape_timeout: 5s

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        scrape_interval: 15s
        scrape_timeout: 5s
