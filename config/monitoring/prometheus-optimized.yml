# NEXUS Platform - Optimized Prometheus Configuration
# This configuration consolidates and optimizes all monitoring settings

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: "nexus-platform"
    environment: "production"
    region: "us-east-1"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093
      timeout: 10s
      api_version: v2

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "rules/*.yml"
  - "rules/nexus-alerts.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]
    scrape_interval: 5s
    metrics_path: /metrics
    scrape_timeout: 5s

  # NEXUS Backend API
  - job_name: "nexus-backend"
    static_configs:
      - targets: ["nexus-backend:8000"]
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # NEXUS Frontend
  - job_name: "nexus-frontend"
    static_configs:
      - targets: ["nexus-frontend:3000"]
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # PostgreSQL Database
  - job_name: "postgres"
    static_configs:
      - targets: ["postgres-exporter:9187"]
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # Redis
  - job_name: "redis"
    static_configs:
      - targets: ["redis-exporter:9121"]
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # Node Exporter
  - job_name: "node-exporter"
    static_configs:
      - targets: ["node-exporter:9100"]
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # cAdvisor
  - job_name: "cadvisor"
    static_configs:
      - targets: ["cadvisor:8080"]
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # Docker Daemon
  - job_name: "docker"
    static_configs:
      - targets: ["docker:9323"]
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # Nginx
  - job_name: "nginx"
    static_configs:
      - targets: ["nginx:9113"]
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # Blackbox Exporter
  - job_name: "blackbox"
    static_configs:
      - targets: ["blackbox-exporter:9115"]
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: "([^:]+):.*"
        replacement: "${1}"

  # Kubernetes API Server (if running in Kubernetes)
  - job_name: "kubernetes-apiserver"
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
      - source_labels:
          [
            __meta_kubernetes_namespace,
            __meta_kubernetes_service_name,
            __meta_kubernetes_endpoint_port_name,
          ]
        action: keep
        regex: default;kubernetes;https
      - source_labels: [__address__]
        action: replace
        target_label: __address__
        regex: (.+)
        replacement: kubernetes.default.svc:443
      - source_labels:
          [
            __meta_kubernetes_namespace,
            __meta_kubernetes_service_name,
            __meta_kubernetes_endpoint_port_name,
          ]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
        replacement: /api/v1/namespaces/${1}/services/${2}:${3}/proxy/metrics
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    scrape_interval: 15s
    scrape_timeout: 5s

  # Kubernetes Nodes (if running in Kubernetes)
  - job_name: "kubernetes-nodes"
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    scrape_interval: 15s
    scrape_timeout: 5s

  # Kubernetes Pods (if running in Kubernetes)
  - job_name: "kubernetes-pods"
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels:
          [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
    scrape_interval: 15s
    scrape_timeout: 5s

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Remote write configuration (for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write-endpoint/api/v1/write"
    basic_auth:
      username: "prometheus"
      password: "your-password"
    queue_config:
      max_samples_per_send: 1000
      batch_send_deadline: 5s
      max_retries: 10
      min_backoff: 30ms
      max_backoff: 100ms

# Remote read configuration (for querying long-term storage)
remote_read:
  - url: "https://prometheus-remote-read-endpoint/api/v1/read"
    basic_auth:
      username: "prometheus"
      password: "your-password"
