# NEXUS Platform - Production Configuration
# Production-ready configuration with security, performance, and monitoring

# Application Settings
app:
  name: "NEXUS Platform"
  version: "1.0.0"
  environment: "production"
  debug: false
  log_level: "INFO"
  host: "0.0.0.0"
  port: 8000
  workers: 4

# Database Configuration
database:
  host: "${DB_HOST}"
  port: 5432
  name: "${DB_NAME}"
  username: "${DB_USER}"
  password: "${DB_PASSWORD}"
  ssl_mode: "require"
  pool_size: 20
  max_overflow: 30
  pool_timeout: 30
  pool_recycle: 3600
  echo: false
  slow_query_threshold: 1000

# Redis Configuration
redis:
  host: "${REDIS_HOST}"
  port: 6379
  password: "${REDIS_PASSWORD}"
  db: 0
  max_connections: 20
  socket_timeout: 5
  socket_connect_timeout: 5
  retry_on_timeout: true

# Security Configuration
security:
  jwt_secret_key: "${JWT_SECRET_KEY}"
  jwt_algorithm: "HS256"
  access_token_expire_minutes: 30
  refresh_token_expire_days: 7
  encryption_key: "${ENCRYPTION_KEY}"
  password_min_length: 8
  password_require_uppercase: true
  password_require_lowercase: true
  password_require_numbers: true
  password_require_special: true
  max_login_attempts: 5
  lockout_duration_minutes: 30
  session_timeout_minutes: 30
  mfa_issuer_name: "NEXUS Platform Production"

# CORS Configuration
cors:
  origins:
    - "https://app.nexusplatform.com"
    - "https://admin.nexusplatform.com"
  allow_credentials: true
  allow_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  allow_headers: ["*"]
  expose_headers: ["*"]
  max_age: 3600

# SSL/TLS Configuration
ssl:
  enabled: true
  cert_file: "/etc/ssl/certs/nexus.crt"
  key_file: "/etc/ssl/private/nexus.key"
  ca_cert_file: "/etc/ssl/certs/ca.crt"
  verify_mode: "required"
  check_hostname: true

# Monitoring Configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    port: 9090
    path: "/metrics"
  grafana:
    enabled: true
    port: 3000
  health_check:
    enabled: true
    interval: 30
    timeout: 10
    endpoints:
      - "/health"
      - "/ready"
      - "/live"
  metrics:
    enabled: true
    collection_interval: 60
    retention_days: 30

# Logging Configuration
logging:
  level: "INFO"
  format: "json"
  file: "/var/log/nexus/nexus.log"
  max_size: "100MB"
  backup_count: 10
  rotation: "daily"
  compression: true
  structured: true
  fields:
    service: "nexus-platform"
    environment: "production"
    version: "1.0.0"

# Email Configuration
email:
  smtp:
    host: "${SMTP_HOST}"
    port: 587
    username: "${SMTP_USERNAME}"
    password: "${SMTP_PASSWORD}"
    use_tls: true
    use_ssl: false
  from_address: "noreply@nexusplatform.com"
  from_name: "NEXUS Platform"
  templates_dir: "/nexus_backend/templates/email"

# File Storage Configuration
storage:
  type: "local" # local, s3, gcs
  local:
    upload_dir: "/var/lib/nexus/uploads"
    max_file_size: "100MB"
    allowed_extensions:
      ["pdf", "doc", "docx", "xls", "xlsx", "csv", "txt", "png", "jpg", "jpeg"]
  s3:
    bucket: "${S3_BUCKET}"
    region: "${S3_REGION}"
    access_key: "${S3_ACCESS_KEY}"
    secret_key: "${S3_SECRET_KEY}"
    endpoint_url: "${S3_ENDPOINT_URL}"

# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *" # Daily at 2 AM
  retention_days: 30
  compression: "gzip"
  encryption: true
  encryption_key: "${BACKUP_ENCRYPTION_KEY}"
  storage:
    type: "s3" # local, s3, gcs
    s3:
      bucket: "${BACKUP_S3_BUCKET}"
      region: "${BACKUP_S3_REGION}"
      prefix: "nexus-backups/"
  include:
    database: true
    files: true
    logs: true
    config: true

# Rate Limiting Configuration
rate_limiting:
  enabled: true
  storage: "redis"
  default_limit: 1000
  window: 3600 # 1 hour
  per_endpoint:
    "/api/auth/login": 10
    "/api/auth/register": 5
    "/api/upload": 50
    "/api/export": 10
  per_user:
    default: 100
    premium: 500
    admin: 1000

# Cache Configuration
cache:
  enabled: true
  backend: "redis"
  default_ttl: 3600
  key_prefix: "nexus:"
  compression: true
  serialization: "json"
  strategies:
    user_sessions: 1800 # 30 minutes
    api_responses: 300 # 5 minutes
    static_content: 86400 # 24 hours

# API Configuration
api:
  version: "v1"
  prefix: "/api/v1"
  docs_enabled: false
  redoc_enabled: false
  openapi_url: "/openapi.json"
  title: "NEXUS Platform API"
  description: "Financial platform API"
  contact:
    name: "NEXUS Support"
    email: "support@nexusplatform.com"
  license:
    name: "Proprietary"
    url: "https://nexusplatform.com/license"

# Feature Flags
features:
  mfa_enabled: true
  audit_logging: true
  risk_assessment: true
  compliance_monitoring: true
  performance_monitoring: true
  backup_enabled: true
  rate_limiting: true
  caching: true
  ssl_enforced: true
  maintenance_mode: false

# Performance Configuration
performance:
  max_request_size: "10MB"
  max_response_size: "50MB"
  request_timeout: 30
  response_timeout: 30
  keepalive_timeout: 5
  max_keepalive_requests: 100
  worker_connections: 1000
  worker_processes: 4
  worker_class: "uvicorn.workers.UvicornWorker"

# Security Headers
security_headers:
  enabled: true
  hsts:
    enabled: true
    max_age: 31536000
    include_subdomains: true
    preload: true
  csp:
    enabled: true
    policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:; frame-ancestors 'none';"
  x_frame_options: "DENY"
  x_content_type_options: "nosniff"
  x_xss_protection: "1; mode=block"
  referrer_policy: "strict-origin-when-cross-origin"
  permissions_policy: "geolocation=(), microphone=(), camera=()"

# External Services
external_services:
  timeout: 30
  retries: 3
  retry_delay: 1
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    recovery_timeout: 60
    expected_exception: "requests.exceptions.RequestException"

# Alerting Configuration
alerting:
  enabled: true
  channels:
    email:
      enabled: true
      recipients: ["alerts@nexusplatform.com", "ops@nexusplatform.com"]
    slack:
      enabled: true
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#alerts"
    webhook:
      enabled: true
      url: "${WEBHOOK_URL}"
  rules:
    high_cpu:
      threshold: 80
      duration: 300
      severity: "warning"
    high_memory:
      threshold: 85
      duration: 300
      severity: "warning"
    disk_space:
      threshold: 90
      duration: 60
      severity: "critical"
    database_connections:
      threshold: 80
      duration: 120
      severity: "warning"
    error_rate:
      threshold: 5
      duration: 300
      severity: "critical"
    response_time:
      threshold: 2000
      duration: 300
      severity: "warning"

# Maintenance Configuration
maintenance:
  enabled: false
  message: "System maintenance in progress. Please try again later."
  start_time: null
  end_time: null
  allowed_ips: []
  bypass_token: "${MAINTENANCE_BYPASS_TOKEN}"

# Development/Testing (should be false in production)
development:
  testing: false
  mock_external_services: false
  enable_debug_toolbar: false
  auto_reload: false
  debug_sql: false
  profile_queries: false
