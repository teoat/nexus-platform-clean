# NEXUS Platform - Fluentd Configuration
# Production log aggregation and forwarding

<source>
  @type tail
  @id nexus-backend-logs
  path /var/log/nexus/*.log
  pos_file /var/log/fluentd/nexus-backend.log.pos
  tag nexus.backend
  format json
  time_key time
  time_format %Y-%m-%dT%H:%M:%S.%L%z
</source>

<source>
  @type tail
  @id nexus-frontend-logs
  path /var/log/nginx/*.log
  pos_file /var/log/fluentd/nexus-frontend.log.pos
  tag nexus.frontend
  format nginx
  time_key time
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  @id nexus-nginx-logs
  path /var/log/nginx/*.log
  pos_file /var/log/fluentd/nexus-nginx.log.pos
  tag nexus.nginx
  format nginx
  time_key time
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

# Parse and enrich logs
<filter nexus.**>
  @type record_transformer
  <record>
    environment production
    cluster nexus-platform
    timestamp ${time}
  </record>
</filter>

# Add severity levels
<filter nexus.backend>
  @type record_transformer
  <record>
    severity ${record["level"] || "INFO"}
    service backend
  </record>
</filter>

<filter nexus.frontend>
  @type record_transformer
  <record>
    severity ${record["status"] >= 400 ? "ERROR" : "INFO"}
    service frontend
  </record>
</filter>

<filter nexus.nginx>
  @type record_transformer
  <record>
    severity ${record["status"] >= 400 ? "ERROR" : "INFO"}
    service nginx
  </record>
</filter>

# Route logs based on severity
<match nexus.**>
  @type rewrite_tag_filter
  <rule>
    key severity
    pattern /^ERROR$/
    tag error.nexus
  </rule>
  <rule>
    key severity
    pattern /^WARN$/
    tag warning.nexus
  </rule>
  <rule>
    key severity
    pattern /^INFO$/
    tag info.nexus
  </rule>
</match>

# Output to Elasticsearch (if available)
<match nexus.**>
  @type elasticsearch
  @id nexus-elasticsearch
  host elasticsearch
  port 9200
  index_name nexus-logs
  type_name _doc
  <buffer>
    @type file
    path /var/log/fluentd/buffers/nexus
    flush_mode interval
    flush_interval 1s
    chunk_limit_size 2m
    queue_limit_length 8
    retry_max_interval 30
    retry_forever true
  </buffer>
</match>

# Output to stdout for debugging
<match nexus.**>
  @type stdout
  @id nexus-stdout
</match>

# Error handling
<match error.nexus>
  @type stdout
  @id nexus-errors
  <format>
    @type json
  </format>
</match>
