"""Initial SSOT models

Revision ID: 92c025ff58b4
Revises:
Create Date: 2025-09-26 00:56:13.393827

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "92c025ff58b4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "alias_definitions",
        sa.Column("alias", sa.String(), nullable=False),
        sa.Column("canonical", sa.String(), nullable=False),
        sa.Column("context", sa.String(), nullable=False),
        sa.Column("alias_type", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("metadata_", sa.JSON(), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=True),
        sa.Column("last_used", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("alias", "context"),
    )
    op.create_index(
        op.f("ix_alias_definitions_alias"), "alias_definitions", ["alias"], unique=False
    )
    op.create_index(
        op.f("ix_alias_definitions_context"),
        "alias_definitions",
        ["context"],
        unique=False,
    )
    op.create_table(
        "audit_log",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("user", sa.String(), nullable=False),
        sa.Column("resource", sa.String(), nullable=False),
        sa.Column("details", sa.JSON(), nullable=True),
        sa.Column("request_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_audit_log_id"), "audit_log", ["id"], unique=False)
    op.create_table(
        "ssot_anchors",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("family", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("format", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("metadata_", sa.JSON(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ssot_anchors_id"), "ssot_anchors", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_ssot_anchors_id"), table_name="ssot_anchors")
    op.drop_table("ssot_anchors")
    op.drop_index(op.f("ix_audit_log_id"), table_name="audit_log")
    op.drop_table("audit_log")
    op.drop_index(op.f("ix_alias_definitions_context"), table_name="alias_definitions")
    op.drop_index(op.f("ix_alias_definitions_alias"), table_name="alias_definitions")
    op.drop_table("alias_definitions")
    # ### end Alembic commands ###
